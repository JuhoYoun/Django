Tmeplate 적용하기

html/css 웹 퍼블리싱 강의에서도 html과 css를 이용해 웹페이지를 만들었는데 django를 사용하면 뭐가 달라지는가?
이전에 만들었던 방식의 웹사이트는 HTML CSS 폰트 그리고 이미지로 이루어져있다 (template 적용하기 lecture example 파일 참조)
만약 여기에 음식 하나를 추가하고 싶다면? index.html (lecture example 프로젝트의 costaurant/foods/templates/foods/index.html)을 열고 아래로 내려가서
food class 태그를 새로 작성하고 음식 사진을 이미지 폴더에 놓고 이미지 경로를 다시 적어줘야한다 음식 설명도 하나하나 바꿔줘야한다 
게다가 이 html 코드에서 날짜 부분은 매일 바꿔줘야되게 디자인되어있다 -> 정적으로 내용이 고정되어 있는것이 불편하다
쟝고를 사용해서 구현하면 각각의 음식에 대한 내용은 데이터베이스에서 가져오고 날짜와 같이 매번 달라지는 부분들이 변경될 때 마다 동적으로 새로운 페이지를 만들 수 있다

직접 해볼까요~

실습파일

templates_03_01 (css, fonts, images, html 파일)

코드잇 실행기에는 foods/templates/foods 디렉토리 안에 css, fonts, images 디렉토리가 미리 생성되어 있습니다.
바로 서버를 실행해서 결과를 확인해보세요.

이 템플릿 파일을 장고 프로젝트에 옮긴다 -> 기존의 templates/foods/index.html 파일은 지워주고 실습파일들을 여기다 풀어준다 -> 이제 개발서버를 켜고 주소창에 domain/foods/index를 처보자
-> template이 잘 render되서 나오는데 css와 image가 적용이 안되있다 -> 다음 강의로

Static Files (정적 파일)
: html 파일을 제외하고 웹 페이지를 rendering 하는 과정에서 필요한 추가적인 파일 예를 들어 CSS나 JavaScript, 이미지, 폰드 등의 파일

장고는 이런 정적파일을 관리하는 디렉토리 구조가 정해져있다 
foods/templates/foods 이런 샌드위치 구조가 기억 나는가? 정적 파일을 넣어주는 디렉토리도 이와 똑같은 구조를 갖는다

foods 앱 디렉토리로 이동 -> 템플릿 파일을 넣어줬던것처럼 정적 파일을 위한 디렉토리를 만든다 -> foods 앱 안에 static이란 디렉토리를 만들어준다 -> static 디렉토리 안에 또 다시 앱이름으로된(foods) 디렉토리를 만든다
-> 이제 이 디렉토리 안에 정적파일을 넣어주면 되는데 한 디렉토리에 모든 정적파일을 넣어줘도 되지만 조금 더 이쁘게 구조화한다면 보통은 CSS JavaScript images fonts 등의 디렉토리를 추가적으로 만든다 (우리는 JavaScript는 지금 없다)
-> 만들어준다! -> 이제 각각의 디렉토리에 맞게 정적 파일을 넣주면 되는데 지금 우리의 정적파일들은 templates 디렉토리 안에 있다 templates 디렉토리 안의 정적파일들 디렉토리 안의 파일들을 새로 만든 정적파일들 디렉토리 안에 넣어준다
-> templates 디렉토리 안의 정적파일 디렉토리드들은 지워준다 (난 그냥 새로운 정적파이 디렉토리 안만들고 정적파일들 디렉토리 자체를 옮겼다) -> 이제 이 옮긴 정적파일들을 사용하도록 템플릿을 수정하면 된다
-> index.html을 연다 -> 맨 위에 {% load static %} 라고 적는다 -> 이건 템플릿 랭귀지 중 템플릿 태그라고 하는데 static에 있는 정적 파일들을 현재 이 템플릿에서 사용한다고 알려준다
-> 정적 파일을 사용한다고 알려줬으니 이제 템플릿에 있는 경로를 정적파일이 있는 위치로 바꿔주면 된다 -> CSS부터 해보자 href가 CSS파일의 경로다 이 부분을 {% static 'foods/css/styles.css'%} 이렇게 바꾼다
-> 이미지는 src가 이미지의 경로다 이 부분을 {% static 'foods/images/chicken.jpg'%} 이렇게 바꾼다 -> 그럼 이제 font는?
